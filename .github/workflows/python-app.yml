name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: lumen-b-ctl-047
  GKE_CLUSTER: my-gke-cluster 
  GKE_ZONE: us-central1-c  
  IMAGE: terra-ai-v2 # image name
  GAR_ZONE: us-central1 
  GAR_REPO: terraform

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_GKE_SECRET }}'

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - name: Docker configuration
      run: |-
        gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GAR_ZONE-docker.pkg.dev

    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # Build the Docker image
    - name: Build
      run: |-
        docker buildx build \
          --file cicd/Dockerfile \
          --tag "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE:${GITHUB_SHA}" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE:${GITHUB_SHA}" 

    - name: Update deployment.yaml
      run: |-       
        sed -i "s|image:.*|image: $GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE:${GITHUB_SHA}|g" cicd/deployment.yaml

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl apply -f cicd/deployment.yaml
        kubectl apply -f cicd/service.yaml
        kubectl apply -f cicd/ingress.yaml
